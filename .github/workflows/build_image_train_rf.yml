name: Build Docker Image

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name of the image to build (e.g., train_rf, validate_data)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    env:
      IMAGE_NAME: ${{ github.event.inputs.image_name }}
      VERSION: ${{ substring(github.sha, 0, 7) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Copy CI tools to src directory
      run: |
        cp tools/ci/* src/
        mkdir -p models

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Install DVC
      run: |
        pip install dvc[s3]
        
    - name: Pull data with DVC
      run: |
        dvc pull
        echo "DVC pull completed successfully"
      
    - name: List project contents
      run: |
        echo "Contents of src directory:"
        ls -la src/
        echo "Contents of ICAIF_KAGGLE directory:"
        ls -la ICAIF_KAGGLE/ || echo "ICAIF_KAGGLE directory not found"

    - name: Build Docker image
      run: |
        docker build -f src/Dockerfile.${{ env.IMAGE_NAME }} -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }} .

    - name: Run Docker container
      run: |
        docker run --rm -v $(pwd)/models:/app/models ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        echo "Container execution completed successfully"
        
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.IMAGE_NAME }}-artifacts-${{ env.VERSION }}
        path: models/
        retention-days: 1
        
    - name: Save Docker image as tar archive
      run: |
        docker save ${{ env.IMAGE_NAME }}:${{ env.VERSION }} -o ${{ env.IMAGE_NAME }}-${{ env.VERSION }}.tar
        gzip ${{ env.IMAGE_NAME }}-${{ env.VERSION }}.tar
        ls -lh ${{ env.IMAGE_NAME }}-${{ env.VERSION }}.tar.gz
        
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.IMAGE_NAME }}-docker-image-${{ env.VERSION }}
        path: ${{ env.IMAGE_NAME }}-${{ env.VERSION }}.tar.gz
        retention-days: 1
